name: Ruby

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run linters
        run: |
          bundle exec rake build

  docs:
    name: Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Generate documentation
        run: |
          bundle exec rake doc

      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name != 'pull_request' }}
        env:
          GIT_AUTHOR_NAME: "Bokobo Shahni"
          GIT_AUTHOR_EMAIL: "shahni@bokobo.space"
          GIT_COMMITTER_NAME: "Bokobo Shahni"
          GIT_COMMITTER_EMAIL: "shahni@bokobo.space"
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./doc

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run linters
        run: |
          bundle exec rake rubocop

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run tests
        env:
          USER_AGENT: "ESI SDK Tests/1.0; (+https://github.com/bokoboshahni/esi-sdk-ruby)"
        run: |
          bundle exec rake spec

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build
      - docs
      - lint
      - test
    if: needs.build.result == 'success' && needs.lint.result == 'success' && needs.test.result == 'success' && needs.docs.result == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Release
        env:
          GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
          GIT_AUTHOR_NAME: "Bokobo Shahni"
          GIT_AUTHOR_EMAIL: "shahni@bokobo.space"
          GIT_COMMITTER_NAME: "Bokobo Shahni"
          GIT_COMMITTER_EMAIL: "shahni@bokobo.space"
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm install -g @semantic-release/changelog @semantic-release/exec @semantic-release/git conventional-changelog-angular
          npx semantic-release ${{ github.event_name == 'pull_request' && '--dry-run' || ' ' }}
